services:
  db:
    image: mariadb:11.4
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 5s
      retries: 10
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - internal
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  db-admin:
    image: bitnami/phpmyadmin:5
    environment:
      - DATABASE_HOST=db
    networks:
      - public
      - internal
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public"
        - "traefik.http.routers.db-admin.rule=Host(`pma.carqr.link`)"
        - "traefik.http.routers.db-admin.entrypoints=https"
        - "traefik.http.routers.db-admin.tls.certresolver=le"
        - "traefik.http.routers.db-admin.middlewares=db-admin-auth"
        - "traefik.http.middlewares.db-admin-auth.basicauth.users=${DB_ADMIN_AUTH}"
        - "traefik.http.services.db-admin.loadbalancer.server.port=8080"
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

  traefik:
    image: traefik:v2.11
    configs:
      - source: traefik-yml
        target: /etc/traefik/traefik.yml
    ports:
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 80
        published: 80
        protocol: tcp
        mode: host

    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public"
        - "traefik.http.middlewares.dashboard-auth.basicauth.users=${DASHBOARD_AUTH}"
        - "traefik.http.routers.dashboard.rule=Host(`gate.carqr.link`)"
        - "traefik.http.routers.dashboard.entrypoints=https"
        - "traefik.http.routers.dashboard.tls.certresolver=le"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      replicas: 1
      placement:
        constraints:
          - node.role == manager

volumes:
  mariadb-data:
  letsencrypt:
    
configs:
  traefik-yml:
    file: traefik/traefik.yml

networks:
  internal:
    driver: overlay
  public:
    driver: overlay
